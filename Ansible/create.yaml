- hosts: localhost
  connection: local
  tasks:
  - name: "generate key pair"
    openssh_keypair:
      path: ~/.ssh/ansible_id_rsa
      state: present
  - name: "create key pair using key_material obtained using 'file' lookup plugin"
    ec2_key:
      name: CloudFormationKeyPair
      key_material: "{{ lookup('file', '~/.ssh/ansible_id_rsa.pub') }}"
      state: present
  - name: "create a simple stack"
    cloudformation:
      state: present
      stack_name: test-stack
      region: eu-west-2
      template: stack.yaml
  - cloudformation_info:
      stack_name: test-stack
      stack_resources: true
    register: output
  - ec2_instance_info:
      instance_ids: "{{ output['cloudformation']['test-stack']['stack_resource_list'] | json_query(query) }}"
    vars:
      query: "[?ResourceType=='AWS::EC2::Instance'].PhysicalResourceId"
    register: ec2
  - set_fact:
      ec2_instances: "{{ ec2['instances'] | map(attribute='public_dns_name') | list }}"
  - name: "build inventory"
    add_host:
      name: "{{ item }}"
      ansible_user: ubuntu
      ansible_ssh_private_key_file: ~/.ssh/ansible_id_rsa
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ConnectTimeout=60'
    with_items: "{{ ec2_instances }}"
- hosts: all
  become: true
  gather_facts: no
  tasks:
  - name: "Wait for system to become reachable"
    wait_for_connection:
  - name: "Gather facts for first time"
    setup:
  - name: "Install Dependencies"
    apt:
      name:
      - nginx
      - git
      state: latest
      update_cache: true


#docker
  - name: prerequisites
    apt:
      pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
      state: latest
      update_cache: true
  - name: docker gpg key
    apt_key:
      url: "https://download.docker.com/linux/debian/gpg"
      state: present
  - name: docker apt repo
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/debian stretch stable"
      state: present
  - name: docker install
    apt:
      pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      state: latest
      update_cache: true
  - name: docker service
    service:
      name: docker
      state: started
  - name: Systemd reload
    systemd:
      daemon_reload: yes
  - name: Install python3 pip
    apt:
     name: python3-pip
     state: latest
     update_cache: true
  - name: Install Docker
    command: pip3 install docker
  - name: Install Requests
    command: pip3 install requests
# install git plus git clone project

  - name: Install Git
    apt:
      name: git
      state: latest
  - name: Create Directory
    file:
      path: /home/project
      state: directory
      mode: '0700'
  - name: Git clone
    git:
      repo: https://github.com/AIbrahimQA/new_project.git
      dest: /home/project/new_project
      version: master
      clone: yes
      recursive: yes
  
# install docker-compose plus run
  - name: Install Docker Compose
    pip:
      name: docker-compose
      state: latest
  - name: Docker Compose up
    docker_compose:
      project_src: /home/project/new_project
      build: yes
      state: present
